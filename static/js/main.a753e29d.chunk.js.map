{"version":3,"sources":["components/ProjectsPage/ProjectCard.js","components/HomePage/HomePage.js","components/ProjectsPage/ProjectsPage.js","components/ProjectPage/ProjectPage.js","components/ContactPage/ContactPage.js","components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["ProjectCard","state","project","this","props","Card","as","Link","to","path","className","src","id","alt","Body","Title","name","Text","type","Footer","skills","map","skill","style","padding","Component","HomePage","rows","i","projects","length","push","CardDeck","Container","ProjectsPage","ProjectPage","hasSecondaryImage","secondaryImageFormat","description","hasLink","onClick","window","open","link","ContactPage","href","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","App","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a753e29d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport projects from \"../../data/projects.json\"\n\nimport Card from \"react-bootstrap/Card\";\n\nimport { Link } from 'react-router-dom';\n\nimport \"./ProjectCard.css\"\n\n\nclass ProjectCard extends Component {\n\n\n    state = {\n\n    }\n\n    render() {\n\n        const { project } = this.props;\n\n\n        return (\n            <Card as={Link} to={project.path} className=\"projects__card\">\n                <img src={\"/assets/\" + project.id + \"-project-image.svg\"} alt=\"project\" />\n                <Card.Body>\n                    <Card.Title className=\"projects__project-title\">{project.name}</Card.Title>\n                    <Card.Text  className=\"projects__project-type\">\n                        {project.type}\n                    </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                    {project.skills.map(skill => <div className=\"projects__project-skill\" style={{ padding: \"0 5px\" }}>{skill}</div>)}\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default ProjectCard;\n","import React, { Component } from 'react';\n\nimport projects from \"../../data/projects.json\"\n\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nimport ProjectCard from \"../ProjectsPage/ProjectCard\"\n\nimport Container from 'react-bootstrap/Container'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Card from 'react-bootstrap/Card'\n\nimport \"./HomePage.css\"\n\n\nclass HomePage extends Component {\n\n\n\n    state = {\n\n    }\n\n    render() {\n        \n\n        const rows = []\n\n        for (let i = 0; i < projects.length; i += 2) {\n            rows.push(\n                <CardDeck>\n                    <ProjectCard project={projects[i]} />\n                    {i + 1 < projects.length ? <ProjectCard project={projects[i + 1]} /> : <Card className=\"placeholder\"></Card>}\n                </CardDeck>\n            )\n        }\n\n        return (\n            <Container className=\"projects\">\n                <div className=\"intro\">\n                Hi, I'm Ben. I'm a creative coder who enjoys designing and building digital products and experiences that work for people.\n                </div>\n                <div className=\"home__project-header\">Projects</div>\n                {rows}\n            </Container>\n\n        );\n    }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nimport projects from \"../../data/projects.json\"\n\nimport CardColumns from \"react-bootstrap/CardColumns\";\n\nimport ProjectCard from \"./ProjectCard\"\n\nimport Container from 'react-bootstrap/Container'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Card from 'react-bootstrap/Card'\n\n\nclass ProjectsPage extends Component {\n\n\n\n    state = {\n\n    }\n\n    render() {\n        \n\n        const rows = []\n\n        for (let i = 0; i < projects.length; i += 2) {\n            rows.push(\n                <CardDeck>\n                    <ProjectCard project={projects[i]} />\n                    {i + 1 < projects.length ? <ProjectCard project={projects[i + 1]} /> : <Card className=\"placeholder\"></Card>}\n                </CardDeck>\n            )\n        }\n\n        return (\n            <Container className=\"projects\">\n                {rows}\n            </Container>\n\n        );\n    }\n}\n\nexport default ProjectsPage;\n","import React, { Component } from 'react';\n\n\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\n\nimport \"./ProjectPage.css\"\n\nclass ProjectPage extends Component {\n\n\n\n    state = {\n\n    }\n\n    render() {\n\n\n        const { project } = this.props;\n\n        return (\n            <div>\n                <img src={\"/assets/\" + project.id + \"-header-image.svg\"} alt=\"project\" className=\"project__header-image\" />\n                {project.hasSecondaryImage ? <img className=\"project__secondary-image\" src={\"/assets/\" + project.id + \"-secondary-image.\" + project.secondaryImageFormat} alt=\"project\" /> : null}\n                <Container>\n                    <div className=\"project__info\">\n                        <div className=\"project__name fancy\">{project.name}</div>\n                        <div className=\"project__description\">{project.description}</div>\n                        {project.hasLink ? <div onClick={()=> window.open(project.link, \"_blank\")} className=\"project__link\">View project online -></div> : null}\n                    </div>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\nexport default ProjectPage;\n","import React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container'\n\nimport \"./ContactPage.css\"\n\nclass ContactPage extends Component {\n\n\n    state = {\n\n    }\n\n    render() {\n\n\n        return (\n            <Container className=\"contact\">\n                <div className=\"intro\">\n                    Hi, I'm Ben. I'm a creative coder who enjoys designing and prototyping digital products and experiences that work for people.\n            </div>\n                <div className=\"contact__info\">\n                    Get In Touch: <a href=\"https://www.linkedin.com/in/ben-graves/\">LinkedIn</a> / <a href=\"mailto:btgraves1997@gmail.com\">Email</a>\n                </div>\n\n\n            </Container>\n        );\n    }\n}\n\nexport default ContactPage;\n","import React, { Component } from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport \"./Navigation.css\"\n\nimport { Switch, Route, Link } from 'react-router-dom';\n\n\nclass Navigation extends Component {\n\n\n    state = {\n\n    }\n\n    render() {\n\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand className=\"fancy\" as={Link} to=\"/\">Ben Graves</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link as={Link} to=\"/projects\">Projects</Nav.Link>\n                        <Nav.Link as={Link} to=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport HttpsRedirect from 'react-https-redirect';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from \"./components/HomePage/HomePage\";\nimport ProjectsPage from \"./components/ProjectsPage/ProjectsPage\";\nimport ProjectPage from \"./components/ProjectPage/ProjectPage\";\nimport ContactPage from \"./components/ContactPage/ContactPage\";\n\nimport Navigation from \"./components/Navigation/Navigation\"\n\nimport projects from \"./data/projects.json\"\n\nfunction App() {\n  return (\n    <HttpsRedirect>\n      <div className=\"App\">\n        <BrowserRouter>\n          <Navigation />\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/projects' component={ProjectsPage} />\n            <Route path='/contact' component={ContactPage} />\n\n            {projects.map(project =>\n              <Route path={project.path}>\n                <ProjectPage project={project} />\n              </Route>\n            )}\n\n          </Switch>\n        </BrowserRouter>\n      </div >\n    </HttpsRedirect>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}